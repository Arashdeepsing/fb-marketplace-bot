"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/search";
exports.ids = ["pages/api/search"];
exports.modules = {

/***/ "playwright":
/*!*****************************!*\
  !*** external "playwright" ***!
  \*****************************/
/***/ ((module) => {

module.exports = import("playwright");;

/***/ }),

/***/ "(api)/./pages/api/search.js":
/*!*****************************!*\
  !*** ./pages/api/search.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var playwright__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! playwright */ \"playwright\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([playwright__WEBPACK_IMPORTED_MODULE_0__]);\nplaywright__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// import { chromium } from \"playwright\";\n// let context = null;\n// async function getContext() {\n//   if (!context) {\n//     const browser = await chromium.launch();\n//     context = await browser.newContext({ storageState: \"auth.json\" });\n//   }\n//   return context;\n// }\n// export default async function handler(req, res) {\n//   const {\n//     query = \"\",\n//     minPrice = \"0\",\n//     maxPrice = \"999999\",\n//     minYear = \"1900\",\n//     maxYear = String(new Date().getFullYear()),\n//     keywords = \"\",\n//     exclude = \"\",\n//     sortBy = \"creation_time_descend\",\n//     radius = \"50\",\n//     scrollCount = \"10\",\n//   } = req.query;\n//   const ctx = await getContext();\n//   const page = await ctx.newPage();\n//   // Step 1: Go to Marketplace\n//   await page.goto(\"https://www.facebook.com/marketplace\");\n//   await page.waitForTimeout(3000);\n//   // Step 2: Open Location Filter (location already stored in auth.json)\n//   try {\n//     await page.click('button[aria-label=\"Location\"]', { timeout: 5000 });\n//     await page.waitForSelector('div[role=\"dialog\"]', { timeout: 3000 });\n//     await page.keyboard.press(\"Escape\"); // Close it again\n//   } catch (e) {\n//     console.warn(\"Location selector not found or skipped\");\n//   }\n//   // Step 3: Apply filters by URL\n//   const params = new URLSearchParams({\n//     query,\n//     minPrice,\n//     maxPrice,\n//     minYear,\n//     maxYear,\n//     sortBy,\n//     radius,\n//   });\n//   await page.goto(\n//     `https://www.facebook.com/marketplace/search/?${params.toString()}`\n//   );\n//   await page.waitForTimeout(5000);\n//   // Step 4: Scroll to load listings\n//   const loops = Math.min(100, Math.max(1, parseInt(scrollCount, 10)));\n//   for (let i = 0; i < loops; i++) {\n//     await page.mouse.wheel(0, 2500);\n//     await page.waitForTimeout(1200);\n//   }\n//   // Step 5: Scrape anchor tags\n//   const anchors = await page.$$eval('a[href*=\"/marketplace/item\"]', (els) =>\n//     els.map((el) => ({\n//       href: el.getAttribute(\"href\"),\n//       text: el.innerText,\n//       img: el.querySelector(\"img\")?.src || \"\",\n//     }))\n//   );\n//   await page.close();\n//   // Step 6: Filter results\n//   const mustInclude = keywords\n//     .split(\",\")\n//     .map((s) => s.trim().toLowerCase())\n//     .filter(Boolean);\n//   const mustExclude = exclude\n//     .split(\",\")\n//     .map((s) => s.trim().toLowerCase())\n//     .filter(Boolean);\n//   const queryWords = query.toLowerCase().split(\" \").filter(Boolean);\n//   const seen = new Set();\n//   const results = [];\n//   for (const item of anchors) {\n//     if (!item.href || seen.has(item.href)) continue;\n//     seen.add(item.href);\n//     const text = item.text.toLowerCase();\n//     // Exclude if necessary\n//     if (mustExclude.some((term) => text.includes(term))) continue;\n//     // Include keywords\n//     if (mustInclude.length && !mustInclude.some((term) => text.includes(term)))\n//       continue;\n//     // Require all query words to be present\n//     if (queryWords.length && !queryWords.every((word) => text.includes(word)))\n//       continue;\n//     // Extract price\n//     const priceMatch = text.match(/\\$[\\d,]+/);\n//     const price = priceMatch\n//       ? parseInt(priceMatch[0].replace(/[$,]/g, \"\"), 10)\n//       : 0;\n//     if (price < parseInt(minPrice, 10) || price > parseInt(maxPrice, 10))\n//       continue;\n//     // Extract year\n//     const yearMatch = text.match(/\\b(19|20)\\d{2}\\b/);\n//     const year = yearMatch ? parseInt(yearMatch[0], 10) : null;\n//     if (year && (year < parseInt(minYear, 10) || year > parseInt(maxYear, 10)))\n//       continue;\n//     results.push({\n//       title: item.text.split(\"\\n\")[0],\n//       price,\n//       year,\n//       link: \"https://www.facebook.com\" + item.href.split(\"?\")[0],\n//       image: item.img,\n//       description: item.text,\n//     });\n//   }\n//   return res.status(200).json(results);\n// }\n\nlet context = null;\nasync function getContext() {\n    if (!context) {\n        const browser = await playwright__WEBPACK_IMPORTED_MODULE_0__.chromium.launch();\n        context = await browser.newContext({\n            storageState: \"auth.json\"\n        });\n    }\n    return context;\n}\nasync function handler(req, res) {\n    const { query = \"\", minPrice = \"0\", maxPrice = \"999999\", minYear = \"1900\", maxYear = String(new Date().getFullYear()), keywords = \"\", exclude = \"\", sortBy = \"creation_time_descend\", radius = \"50\", scrollCount = \"10\" } = req.query;\n    const ctx = await getContext();\n    const page = await ctx.newPage();\n    // Step 1: Go to Marketplace\n    await page.goto(\"https://www.facebook.com/marketplace\");\n    await page.waitForTimeout(3000);\n    // Step 2: Try to trigger location logic to confirm it's loaded from auth\n    try {\n        await page.click('button[aria-label=\"Location\"]', {\n            timeout: 5000\n        });\n        await page.waitForSelector('div[role=\"dialog\"]', {\n            timeout: 3000\n        });\n        await page.keyboard.press(\"Escape\");\n    } catch (e) {\n        console.warn(\"Location selector not found or skipped\");\n    }\n    // Step 3: Apply filters via URL\n    const params = new URLSearchParams({\n        query,\n        minPrice,\n        maxPrice,\n        minYear,\n        maxYear,\n        sortBy,\n        radius\n    });\n    await page.goto(`https://www.facebook.com/marketplace/search/?${params.toString()}`);\n    await page.waitForTimeout(5000);\n    // Step 4: Scroll to load listings dynamically\n    const loops = Math.min(100, Math.max(1, parseInt(scrollCount, 10)));\n    for(let i = 0; i < loops; i++){\n        await page.mouse.wheel(0, 2500);\n        await page.waitForTimeout(1200);\n    }\n    // Step 5: Scrape anchor tags\n    const anchors = await page.$$eval('a[href*=\"/marketplace/item\"]', (els)=>els.map((el)=>({\n                href: el.getAttribute(\"href\"),\n                text: el.innerText,\n                img: el.querySelector(\"img\")?.src || \"\"\n            })));\n    await page.close();\n    // Step 6: Filter results\n    const mustInclude = keywords.split(\",\").map((s)=>s.trim().toLowerCase()).filter(Boolean);\n    const mustExclude = exclude.split(\",\").map((s)=>s.trim().toLowerCase()).filter(Boolean);\n    const queryWords = query.toLowerCase().split(\" \").filter(Boolean);\n    const seen = new Set();\n    const results = [];\n    for (const item of anchors){\n        if (!item.href || seen.has(item.href)) continue;\n        seen.add(item.href);\n        const text = item.text.toLowerCase();\n        if (mustExclude.some((term)=>text.includes(term))) continue;\n        if (mustInclude.length && !mustInclude.some((term)=>text.includes(term))) continue;\n        if (queryWords.length && !queryWords.every((word)=>text.includes(word))) continue;\n        const priceMatch = text.match(/\\$[\\d,]+/);\n        const price = priceMatch ? parseInt(priceMatch[0].replace(/[$,]/g, \"\"), 10) : 0;\n        if (price < parseInt(minPrice, 10) || price > parseInt(maxPrice, 10)) continue;\n        const yearMatch = text.match(/\\b(19|20)\\d{2}\\b/);\n        const year = yearMatch ? parseInt(yearMatch[0], 10) : null;\n        if (year && (year < parseInt(minYear, 10) || year > parseInt(maxYear, 10))) continue;\n        results.push({\n            title: item.text.split(\"\\n\")[0],\n            price,\n            year,\n            link: \"https://www.facebook.com\" + item.href.split(\"?\")[0],\n            image: item.img,\n            description: item.text\n        });\n    }\n    return res.status(200).json(results);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWEzQixLQUFLNEIsS0FBSyxDQUFDO1FBQzlCLE1BQU1DLFFBQVFGLGFBQ1Z0QyxTQUFTc0MsVUFBVSxDQUFDLEVBQUUsQ0FBQ0csT0FBTyxDQUFDLFNBQVMsS0FBSyxNQUM3QztRQUNKLElBQUlELFFBQVF4QyxTQUFTaEMsVUFBVSxPQUFPd0UsUUFBUXhDLFNBQVMvQixVQUFVLEtBQy9EO1FBRUYsTUFBTXlFLFlBQVkvQixLQUFLNEIsS0FBSyxDQUFDO1FBQzdCLE1BQU1JLE9BQU9ELFlBQVkxQyxTQUFTMEMsU0FBUyxDQUFDLEVBQUUsRUFBRSxNQUFNO1FBQ3RELElBQUlDLFFBQVNBLENBQUFBLE9BQU8zQyxTQUFTOUIsU0FBUyxPQUFPeUUsT0FBTzNDLFNBQVM3QixTQUFTLEdBQUUsR0FDdEU7UUFFRnlELFFBQVFnQixJQUFJLENBQUM7WUFDWEMsT0FBT2hCLEtBQUtsQixJQUFJLENBQUNPLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUMvQnNCO1lBQ0FHO1lBQ0FHLE1BQU0sNkJBQTZCakIsS0FBS3BCLElBQUksQ0FBQ1MsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzFENkIsT0FBT2xCLEtBQUtoQixHQUFHO1lBQ2ZtQyxhQUFhbkIsS0FBS2xCLElBQUk7UUFDeEI7SUFDRjtJQUVBLE9BQU83QyxJQUFJbUYsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQ3RCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2V0cGxhY2UtYXV0by1tZXNzYWdlLy4vcGFnZXMvYXBpL3NlYXJjaC5qcz81ZDNhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCB7IGNocm9taXVtIH0gZnJvbSBcInBsYXl3cmlnaHRcIjtcblxuLy8gbGV0IGNvbnRleHQgPSBudWxsO1xuLy8gYXN5bmMgZnVuY3Rpb24gZ2V0Q29udGV4dCgpIHtcbi8vICAgaWYgKCFjb250ZXh0KSB7XG4vLyAgICAgY29uc3QgYnJvd3NlciA9IGF3YWl0IGNocm9taXVtLmxhdW5jaCgpO1xuLy8gICAgIGNvbnRleHQgPSBhd2FpdCBicm93c2VyLm5ld0NvbnRleHQoeyBzdG9yYWdlU3RhdGU6IFwiYXV0aC5qc29uXCIgfSk7XG4vLyAgIH1cbi8vICAgcmV0dXJuIGNvbnRleHQ7XG4vLyB9XG5cbi8vIGV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcbi8vICAgY29uc3Qge1xuLy8gICAgIHF1ZXJ5ID0gXCJcIixcbi8vICAgICBtaW5QcmljZSA9IFwiMFwiLFxuLy8gICAgIG1heFByaWNlID0gXCI5OTk5OTlcIixcbi8vICAgICBtaW5ZZWFyID0gXCIxOTAwXCIsXG4vLyAgICAgbWF4WWVhciA9IFN0cmluZyhuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkpLFxuLy8gICAgIGtleXdvcmRzID0gXCJcIixcbi8vICAgICBleGNsdWRlID0gXCJcIixcbi8vICAgICBzb3J0QnkgPSBcImNyZWF0aW9uX3RpbWVfZGVzY2VuZFwiLFxuLy8gICAgIHJhZGl1cyA9IFwiNTBcIixcbi8vICAgICBzY3JvbGxDb3VudCA9IFwiMTBcIixcbi8vICAgfSA9IHJlcS5xdWVyeTtcblxuLy8gICBjb25zdCBjdHggPSBhd2FpdCBnZXRDb250ZXh0KCk7XG4vLyAgIGNvbnN0IHBhZ2UgPSBhd2FpdCBjdHgubmV3UGFnZSgpO1xuXG4vLyAgIC8vIFN0ZXAgMTogR28gdG8gTWFya2V0cGxhY2Vcbi8vICAgYXdhaXQgcGFnZS5nb3RvKFwiaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL21hcmtldHBsYWNlXCIpO1xuLy8gICBhd2FpdCBwYWdlLndhaXRGb3JUaW1lb3V0KDMwMDApO1xuXG4vLyAgIC8vIFN0ZXAgMjogT3BlbiBMb2NhdGlvbiBGaWx0ZXIgKGxvY2F0aW9uIGFscmVhZHkgc3RvcmVkIGluIGF1dGguanNvbilcbi8vICAgdHJ5IHtcbi8vICAgICBhd2FpdCBwYWdlLmNsaWNrKCdidXR0b25bYXJpYS1sYWJlbD1cIkxvY2F0aW9uXCJdJywgeyB0aW1lb3V0OiA1MDAwIH0pO1xuLy8gICAgIGF3YWl0IHBhZ2Uud2FpdEZvclNlbGVjdG9yKCdkaXZbcm9sZT1cImRpYWxvZ1wiXScsIHsgdGltZW91dDogMzAwMCB9KTtcbi8vICAgICBhd2FpdCBwYWdlLmtleWJvYXJkLnByZXNzKFwiRXNjYXBlXCIpOyAvLyBDbG9zZSBpdCBhZ2FpblxuLy8gICB9IGNhdGNoIChlKSB7XG4vLyAgICAgY29uc29sZS53YXJuKFwiTG9jYXRpb24gc2VsZWN0b3Igbm90IGZvdW5kIG9yIHNraXBwZWRcIik7XG4vLyAgIH1cblxuLy8gICAvLyBTdGVwIDM6IEFwcGx5IGZpbHRlcnMgYnkgVVJMXG4vLyAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoe1xuLy8gICAgIHF1ZXJ5LFxuLy8gICAgIG1pblByaWNlLFxuLy8gICAgIG1heFByaWNlLFxuLy8gICAgIG1pblllYXIsXG4vLyAgICAgbWF4WWVhcixcbi8vICAgICBzb3J0QnksXG4vLyAgICAgcmFkaXVzLFxuLy8gICB9KTtcblxuLy8gICBhd2FpdCBwYWdlLmdvdG8oXG4vLyAgICAgYGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9tYXJrZXRwbGFjZS9zZWFyY2gvPyR7cGFyYW1zLnRvU3RyaW5nKCl9YFxuLy8gICApO1xuLy8gICBhd2FpdCBwYWdlLndhaXRGb3JUaW1lb3V0KDUwMDApO1xuXG4vLyAgIC8vIFN0ZXAgNDogU2Nyb2xsIHRvIGxvYWQgbGlzdGluZ3Ncbi8vICAgY29uc3QgbG9vcHMgPSBNYXRoLm1pbigxMDAsIE1hdGgubWF4KDEsIHBhcnNlSW50KHNjcm9sbENvdW50LCAxMCkpKTtcbi8vICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsb29wczsgaSsrKSB7XG4vLyAgICAgYXdhaXQgcGFnZS5tb3VzZS53aGVlbCgwLCAyNTAwKTtcbi8vICAgICBhd2FpdCBwYWdlLndhaXRGb3JUaW1lb3V0KDEyMDApO1xuLy8gICB9XG5cbi8vICAgLy8gU3RlcCA1OiBTY3JhcGUgYW5jaG9yIHRhZ3Ncbi8vICAgY29uc3QgYW5jaG9ycyA9IGF3YWl0IHBhZ2UuJCRldmFsKCdhW2hyZWYqPVwiL21hcmtldHBsYWNlL2l0ZW1cIl0nLCAoZWxzKSA9PlxuLy8gICAgIGVscy5tYXAoKGVsKSA9PiAoe1xuLy8gICAgICAgaHJlZjogZWwuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKSxcbi8vICAgICAgIHRleHQ6IGVsLmlubmVyVGV4dCxcbi8vICAgICAgIGltZzogZWwucXVlcnlTZWxlY3RvcihcImltZ1wiKT8uc3JjIHx8IFwiXCIsXG4vLyAgICAgfSkpXG4vLyAgICk7XG4vLyAgIGF3YWl0IHBhZ2UuY2xvc2UoKTtcblxuLy8gICAvLyBTdGVwIDY6IEZpbHRlciByZXN1bHRzXG4vLyAgIGNvbnN0IG11c3RJbmNsdWRlID0ga2V5d29yZHNcbi8vICAgICAuc3BsaXQoXCIsXCIpXG4vLyAgICAgLm1hcCgocykgPT4gcy50cmltKCkudG9Mb3dlckNhc2UoKSlcbi8vICAgICAuZmlsdGVyKEJvb2xlYW4pO1xuLy8gICBjb25zdCBtdXN0RXhjbHVkZSA9IGV4Y2x1ZGVcbi8vICAgICAuc3BsaXQoXCIsXCIpXG4vLyAgICAgLm1hcCgocykgPT4gcy50cmltKCkudG9Mb3dlckNhc2UoKSlcbi8vICAgICAuZmlsdGVyKEJvb2xlYW4pO1xuLy8gICBjb25zdCBxdWVyeVdvcmRzID0gcXVlcnkudG9Mb3dlckNhc2UoKS5zcGxpdChcIiBcIikuZmlsdGVyKEJvb2xlYW4pO1xuLy8gICBjb25zdCBzZWVuID0gbmV3IFNldCgpO1xuLy8gICBjb25zdCByZXN1bHRzID0gW107XG5cbi8vICAgZm9yIChjb25zdCBpdGVtIG9mIGFuY2hvcnMpIHtcbi8vICAgICBpZiAoIWl0ZW0uaHJlZiB8fCBzZWVuLmhhcyhpdGVtLmhyZWYpKSBjb250aW51ZTtcbi8vICAgICBzZWVuLmFkZChpdGVtLmhyZWYpO1xuXG4vLyAgICAgY29uc3QgdGV4dCA9IGl0ZW0udGV4dC50b0xvd2VyQ2FzZSgpO1xuXG4vLyAgICAgLy8gRXhjbHVkZSBpZiBuZWNlc3Nhcnlcbi8vICAgICBpZiAobXVzdEV4Y2x1ZGUuc29tZSgodGVybSkgPT4gdGV4dC5pbmNsdWRlcyh0ZXJtKSkpIGNvbnRpbnVlO1xuXG4vLyAgICAgLy8gSW5jbHVkZSBrZXl3b3Jkc1xuLy8gICAgIGlmIChtdXN0SW5jbHVkZS5sZW5ndGggJiYgIW11c3RJbmNsdWRlLnNvbWUoKHRlcm0pID0+IHRleHQuaW5jbHVkZXModGVybSkpKVxuLy8gICAgICAgY29udGludWU7XG5cbi8vICAgICAvLyBSZXF1aXJlIGFsbCBxdWVyeSB3b3JkcyB0byBiZSBwcmVzZW50XG4vLyAgICAgaWYgKHF1ZXJ5V29yZHMubGVuZ3RoICYmICFxdWVyeVdvcmRzLmV2ZXJ5KCh3b3JkKSA9PiB0ZXh0LmluY2x1ZGVzKHdvcmQpKSlcbi8vICAgICAgIGNvbnRpbnVlO1xuXG4vLyAgICAgLy8gRXh0cmFjdCBwcmljZVxuLy8gICAgIGNvbnN0IHByaWNlTWF0Y2ggPSB0ZXh0Lm1hdGNoKC9cXCRbXFxkLF0rLyk7XG4vLyAgICAgY29uc3QgcHJpY2UgPSBwcmljZU1hdGNoXG4vLyAgICAgICA/IHBhcnNlSW50KHByaWNlTWF0Y2hbMF0ucmVwbGFjZSgvWyQsXS9nLCBcIlwiKSwgMTApXG4vLyAgICAgICA6IDA7XG4vLyAgICAgaWYgKHByaWNlIDwgcGFyc2VJbnQobWluUHJpY2UsIDEwKSB8fCBwcmljZSA+IHBhcnNlSW50KG1heFByaWNlLCAxMCkpXG4vLyAgICAgICBjb250aW51ZTtcblxuLy8gICAgIC8vIEV4dHJhY3QgeWVhclxuLy8gICAgIGNvbnN0IHllYXJNYXRjaCA9IHRleHQubWF0Y2goL1xcYigxOXwyMClcXGR7Mn1cXGIvKTtcbi8vICAgICBjb25zdCB5ZWFyID0geWVhck1hdGNoID8gcGFyc2VJbnQoeWVhck1hdGNoWzBdLCAxMCkgOiBudWxsO1xuLy8gICAgIGlmICh5ZWFyICYmICh5ZWFyIDwgcGFyc2VJbnQobWluWWVhciwgMTApIHx8IHllYXIgPiBwYXJzZUludChtYXhZZWFyLCAxMCkpKVxuLy8gICAgICAgY29udGludWU7XG5cbi8vICAgICByZXN1bHRzLnB1c2goe1xuLy8gICAgICAgdGl0bGU6IGl0ZW0udGV4dC5zcGxpdChcIlxcblwiKVswXSxcbi8vICAgICAgIHByaWNlLFxuLy8gICAgICAgeWVhcixcbi8vICAgICAgIGxpbms6IFwiaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tXCIgKyBpdGVtLmhyZWYuc3BsaXQoXCI/XCIpWzBdLFxuLy8gICAgICAgaW1hZ2U6IGl0ZW0uaW1nLFxuLy8gICAgICAgZGVzY3JpcHRpb246IGl0ZW0udGV4dCxcbi8vICAgICB9KTtcbi8vICAgfVxuXG4vLyAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHRzKTtcbi8vIH1cblxuaW1wb3J0IHsgY2hyb21pdW0gfSBmcm9tIFwicGxheXdyaWdodFwiO1xuXG5sZXQgY29udGV4dCA9IG51bGw7XG5hc3luYyBmdW5jdGlvbiBnZXRDb250ZXh0KCkge1xuICBpZiAoIWNvbnRleHQpIHtcbiAgICBjb25zdCBicm93c2VyID0gYXdhaXQgY2hyb21pdW0ubGF1bmNoKCk7XG4gICAgY29udGV4dCA9IGF3YWl0IGJyb3dzZXIubmV3Q29udGV4dCh7IHN0b3JhZ2VTdGF0ZTogXCJhdXRoLmpzb25cIiB9KTtcbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICBjb25zdCB7XG4gICAgcXVlcnkgPSBcIlwiLFxuICAgIG1pblByaWNlID0gXCIwXCIsXG4gICAgbWF4UHJpY2UgPSBcIjk5OTk5OVwiLFxuICAgIG1pblllYXIgPSBcIjE5MDBcIixcbiAgICBtYXhZZWFyID0gU3RyaW5nKG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKSksXG4gICAga2V5d29yZHMgPSBcIlwiLFxuICAgIGV4Y2x1ZGUgPSBcIlwiLFxuICAgIHNvcnRCeSA9IFwiY3JlYXRpb25fdGltZV9kZXNjZW5kXCIsXG4gICAgcmFkaXVzID0gXCI1MFwiLFxuICAgIHNjcm9sbENvdW50ID0gXCIxMFwiLFxuICB9ID0gcmVxLnF1ZXJ5O1xuXG4gIGNvbnN0IGN0eCA9IGF3YWl0IGdldENvbnRleHQoKTtcbiAgY29uc3QgcGFnZSA9IGF3YWl0IGN0eC5uZXdQYWdlKCk7XG5cbiAgLy8gU3RlcCAxOiBHbyB0byBNYXJrZXRwbGFjZVxuICBhd2FpdCBwYWdlLmdvdG8oXCJodHRwczovL3d3dy5mYWNlYm9vay5jb20vbWFya2V0cGxhY2VcIik7XG4gIGF3YWl0IHBhZ2Uud2FpdEZvclRpbWVvdXQoMzAwMCk7XG5cbiAgLy8gU3RlcCAyOiBUcnkgdG8gdHJpZ2dlciBsb2NhdGlvbiBsb2dpYyB0byBjb25maXJtIGl0J3MgbG9hZGVkIGZyb20gYXV0aFxuICB0cnkge1xuICAgIGF3YWl0IHBhZ2UuY2xpY2soJ2J1dHRvblthcmlhLWxhYmVsPVwiTG9jYXRpb25cIl0nLCB7IHRpbWVvdXQ6IDUwMDAgfSk7XG4gICAgYXdhaXQgcGFnZS53YWl0Rm9yU2VsZWN0b3IoJ2Rpdltyb2xlPVwiZGlhbG9nXCJdJywgeyB0aW1lb3V0OiAzMDAwIH0pO1xuICAgIGF3YWl0IHBhZ2Uua2V5Ym9hcmQucHJlc3MoXCJFc2NhcGVcIik7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjb25zb2xlLndhcm4oXCJMb2NhdGlvbiBzZWxlY3RvciBub3QgZm91bmQgb3Igc2tpcHBlZFwiKTtcbiAgfVxuXG4gIC8vIFN0ZXAgMzogQXBwbHkgZmlsdGVycyB2aWEgVVJMXG4gIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgIHF1ZXJ5LFxuICAgIG1pblByaWNlLFxuICAgIG1heFByaWNlLFxuICAgIG1pblllYXIsXG4gICAgbWF4WWVhcixcbiAgICBzb3J0QnksXG4gICAgcmFkaXVzLFxuICB9KTtcblxuICBhd2FpdCBwYWdlLmdvdG8oXG4gICAgYGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9tYXJrZXRwbGFjZS9zZWFyY2gvPyR7cGFyYW1zLnRvU3RyaW5nKCl9YFxuICApO1xuICBhd2FpdCBwYWdlLndhaXRGb3JUaW1lb3V0KDUwMDApO1xuXG4gIC8vIFN0ZXAgNDogU2Nyb2xsIHRvIGxvYWQgbGlzdGluZ3MgZHluYW1pY2FsbHlcbiAgY29uc3QgbG9vcHMgPSBNYXRoLm1pbigxMDAsIE1hdGgubWF4KDEsIHBhcnNlSW50KHNjcm9sbENvdW50LCAxMCkpKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsb29wczsgaSsrKSB7XG4gICAgYXdhaXQgcGFnZS5tb3VzZS53aGVlbCgwLCAyNTAwKTtcbiAgICBhd2FpdCBwYWdlLndhaXRGb3JUaW1lb3V0KDEyMDApO1xuICB9XG5cbiAgLy8gU3RlcCA1OiBTY3JhcGUgYW5jaG9yIHRhZ3NcbiAgY29uc3QgYW5jaG9ycyA9IGF3YWl0IHBhZ2UuJCRldmFsKCdhW2hyZWYqPVwiL21hcmtldHBsYWNlL2l0ZW1cIl0nLCAoZWxzKSA9PlxuICAgIGVscy5tYXAoKGVsKSA9PiAoe1xuICAgICAgaHJlZjogZWwuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKSxcbiAgICAgIHRleHQ6IGVsLmlubmVyVGV4dCxcbiAgICAgIGltZzogZWwucXVlcnlTZWxlY3RvcihcImltZ1wiKT8uc3JjIHx8IFwiXCIsXG4gICAgfSkpXG4gICk7XG4gIGF3YWl0IHBhZ2UuY2xvc2UoKTtcblxuICAvLyBTdGVwIDY6IEZpbHRlciByZXN1bHRzXG4gIGNvbnN0IG11c3RJbmNsdWRlID0ga2V5d29yZHNcbiAgICAuc3BsaXQoXCIsXCIpXG4gICAgLm1hcCgocykgPT4gcy50cmltKCkudG9Mb3dlckNhc2UoKSlcbiAgICAuZmlsdGVyKEJvb2xlYW4pO1xuICBjb25zdCBtdXN0RXhjbHVkZSA9IGV4Y2x1ZGVcbiAgICAuc3BsaXQoXCIsXCIpXG4gICAgLm1hcCgocykgPT4gcy50cmltKCkudG9Mb3dlckNhc2UoKSlcbiAgICAuZmlsdGVyKEJvb2xlYW4pO1xuICBjb25zdCBxdWVyeVdvcmRzID0gcXVlcnkudG9Mb3dlckNhc2UoKS5zcGxpdChcIiBcIikuZmlsdGVyKEJvb2xlYW4pO1xuICBjb25zdCBzZWVuID0gbmV3IFNldCgpO1xuICBjb25zdCByZXN1bHRzID0gW107XG5cbiAgZm9yIChjb25zdCBpdGVtIG9mIGFuY2hvcnMpIHtcbiAgICBpZiAoIWl0ZW0uaHJlZiB8fCBzZWVuLmhhcyhpdGVtLmhyZWYpKSBjb250aW51ZTtcbiAgICBzZWVuLmFkZChpdGVtLmhyZWYpO1xuXG4gICAgY29uc3QgdGV4dCA9IGl0ZW0udGV4dC50b0xvd2VyQ2FzZSgpO1xuXG4gICAgaWYgKG11c3RFeGNsdWRlLnNvbWUoKHRlcm0pID0+IHRleHQuaW5jbHVkZXModGVybSkpKSBjb250aW51ZTtcbiAgICBpZiAobXVzdEluY2x1ZGUubGVuZ3RoICYmICFtdXN0SW5jbHVkZS5zb21lKCh0ZXJtKSA9PiB0ZXh0LmluY2x1ZGVzKHRlcm0pKSlcbiAgICAgIGNvbnRpbnVlO1xuICAgIGlmIChxdWVyeVdvcmRzLmxlbmd0aCAmJiAhcXVlcnlXb3Jkcy5ldmVyeSgod29yZCkgPT4gdGV4dC5pbmNsdWRlcyh3b3JkKSkpXG4gICAgICBjb250aW51ZTtcblxuICAgIGNvbnN0IHByaWNlTWF0Y2ggPSB0ZXh0Lm1hdGNoKC9cXCRbXFxkLF0rLyk7XG4gICAgY29uc3QgcHJpY2UgPSBwcmljZU1hdGNoXG4gICAgICA/IHBhcnNlSW50KHByaWNlTWF0Y2hbMF0ucmVwbGFjZSgvWyQsXS9nLCBcIlwiKSwgMTApXG4gICAgICA6IDA7XG4gICAgaWYgKHByaWNlIDwgcGFyc2VJbnQobWluUHJpY2UsIDEwKSB8fCBwcmljZSA+IHBhcnNlSW50KG1heFByaWNlLCAxMCkpXG4gICAgICBjb250aW51ZTtcblxuICAgIGNvbnN0IHllYXJNYXRjaCA9IHRleHQubWF0Y2goL1xcYigxOXwyMClcXGR7Mn1cXGIvKTtcbiAgICBjb25zdCB5ZWFyID0geWVhck1hdGNoID8gcGFyc2VJbnQoeWVhck1hdGNoWzBdLCAxMCkgOiBudWxsO1xuICAgIGlmICh5ZWFyICYmICh5ZWFyIDwgcGFyc2VJbnQobWluWWVhciwgMTApIHx8IHllYXIgPiBwYXJzZUludChtYXhZZWFyLCAxMCkpKVxuICAgICAgY29udGludWU7XG5cbiAgICByZXN1bHRzLnB1c2goe1xuICAgICAgdGl0bGU6IGl0ZW0udGV4dC5zcGxpdChcIlxcblwiKVswXSxcbiAgICAgIHByaWNlLFxuICAgICAgeWVhcixcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tXCIgKyBpdGVtLmhyZWYuc3BsaXQoXCI/XCIpWzBdLFxuICAgICAgaW1hZ2U6IGl0ZW0uaW1nLFxuICAgICAgZGVzY3JpcHRpb246IGl0ZW0udGV4dCxcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHRzKTtcbn1cbiJdLCJuYW1lcyI6WyJjaHJvbWl1bSIsImNvbnRleHQiLCJnZXRDb250ZXh0IiwiYnJvd3NlciIsImxhdW5jaCIsIm5ld0NvbnRleHQiLCJzdG9yYWdlU3RhdGUiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwicXVlcnkiLCJtaW5QcmljZSIsIm1heFByaWNlIiwibWluWWVhciIsIm1heFllYXIiLCJTdHJpbmciLCJEYXRlIiwiZ2V0RnVsbFllYXIiLCJrZXl3b3JkcyIsImV4Y2x1ZGUiLCJzb3J0QnkiLCJyYWRpdXMiLCJzY3JvbGxDb3VudCIsImN0eCIsInBhZ2UiLCJuZXdQYWdlIiwiZ290byIsIndhaXRGb3JUaW1lb3V0IiwiY2xpY2siLCJ0aW1lb3V0Iiwid2FpdEZvclNlbGVjdG9yIiwia2V5Ym9hcmQiLCJwcmVzcyIsImUiLCJjb25zb2xlIiwid2FybiIsInBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsInRvU3RyaW5nIiwibG9vcHMiLCJNYXRoIiwibWluIiwibWF4IiwicGFyc2VJbnQiLCJpIiwibW91c2UiLCJ3aGVlbCIsImFuY2hvcnMiLCIkJGV2YWwiLCJlbHMiLCJtYXAiLCJlbCIsImhyZWYiLCJnZXRBdHRyaWJ1dGUiLCJ0ZXh0IiwiaW5uZXJUZXh0IiwiaW1nIiwicXVlcnlTZWxlY3RvciIsInNyYyIsImNsb3NlIiwibXVzdEluY2x1ZGUiLCJzcGxpdCIsInMiLCJ0cmltIiwidG9Mb3dlckNhc2UiLCJmaWx0ZXIiLCJCb29sZWFuIiwibXVzdEV4Y2x1ZGUiLCJxdWVyeVdvcmRzIiwic2VlbiIsIlNldCIsInJlc3VsdHMiLCJpdGVtIiwiaGFzIiwiYWRkIiwic29tZSIsInRlcm0iLCJpbmNsdWRlcyIsImxlbmd0aCIsImV2ZXJ5Iiwid29yZCIsInByaWNlTWF0Y2giLCJtYXRjaCIsInByaWNlIiwicmVwbGFjZSIsInllYXJNYXRjaCIsInllYXIiLCJwdXNoIiwidGl0bGUiLCJsaW5rIiwiaW1hZ2UiLCJkZXNjcmlwdGlvbiIsInN0YXR1cyIsImpzb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/search.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/search.js"));
module.exports = __webpack_exports__;

})();